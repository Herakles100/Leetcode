// Problem statement: https://leetcode.com/problems/kth-missing-positive-number
// Author: https://github.com/Herakles100
// Time complexity: O(N)
// Space complexity: O(N)
// Hashmap approach

class SolutionMap {
public:
    int findKthPositive(vector<int>& arr, int k) {
        auto len = arr.size() + k;
        unordered_map<int, int> m;
        for(auto i: arr)
            m[i]++;
        for(auto i=1; i<=len; ++i){
            if(m[i]==0) k--;
            if(!k) return i;
        }     
        return 0;
    }
};

// Problem statement: https://leetcode.com/problems/kth-missing-positive-number
// Author: https://github.com/Herakles100
// Time complexity: O(logN)
// Space complexity: O(1)
// Binary Search approach

class SolutionSearch {
public:
    int findKthPositive(vector<int>& arr, int k) {
        int left = 0, right = arr.size(), middle;
        while(left<right){
            middle=(left+right)/2;
            if(arr[middle]-1-middle < k)
                left = middle+1;
            else right = middle;       
        }
        return left+k;
    }
};
